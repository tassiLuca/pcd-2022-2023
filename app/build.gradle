plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
    id 'application'
  	id "org.openjfx.javafxplugin" version "0.0.13"
}

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(20)
    }
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

dependencies {
    // This dependency is used by the application.
    implementation 'com.google.guava:guava:31.1-jre'
    // VertX
    implementation("io.vertx:vertx-core:4.4.1")
    implementation("io.vertx:vertx-web:4.4.1")
    implementation("io.vertx:vertx-web-client:4.4.1")
    // RxJava
	implementation 'io.reactivex.rxjava3:rxjava:3.1.4'
    // Actors - akka
  	implementation platform("com.typesafe.akka:akka-bom_2.13:2.8.2")
  	implementation "com.typesafe.akka:akka-actor-typed_2.13"
    testImplementation "com.typesafe.akka:akka-actor-testkit-typed_2.13"    
    // RabbitMQ
	implementation 'com.rabbitmq:amqp-client:5.17.0'
    // logging framework SLF4J
	implementation 'org.slf4j:slf4j-api:2.0.7'
	// testImplementation 'org.slf4j:slf4j-reload4j:2.0.7'
    implementation 'org.slf4j:slf4j-simple:2.0.7'
    // RxJava
    implementation "io.reactivex.rxjava3:rxjava:3.1.6"
    // JPF
    implementation files("../lib/jpf-classes.jar", "../lib/jpf-annotations.jar")
    // Use JUnit Jupiter for testing.
    testImplementation "org.junit.jupiter:junit-jupiter-api:5.9.2"
    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:5.9.2"
}

application {
    // Define the main class for the application.
    mainClass = 'pcd.App'
}

tasks.named('test') {
    // Use JUnit Platform for unit tests.
    useJUnitPlatform()
}

tasks.withType(JavaCompile).configureEach {
    options.compilerArgs += ["--enable-preview"]
}

tasks.withType(JavaExec).configureEach {
    jvmArgs += ["--enable-preview"]
}
